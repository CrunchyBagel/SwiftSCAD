let($fa=2.000000, $fn=0, $fs=0.150000) let($fa=5.000000, $fn=0, $fs=1.000000) union() { intersection() { intersection() { translate(v=[0.000000, 0.000000, 0.000000]) multmatrix(m=[[0.975837, -0.153556, 0.155446, 0.000000], [-0.153556, 0.024163, 0.987844, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.764159, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.000000, 0.000000, 0.000000]) multmatrix(m=[[0.975837, -0.153556, 0.155446, 0.000000], [-0.153556, 0.024163, 0.987844, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.118785, 0.754870, 0.000000]) multmatrix(m=[[0.975287, -0.153470, 0.158900, 0.000000], [-0.156969, 0.024700, 0.987288, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.118785, 0.754870, 0.000000]) multmatrix(m=[[0.974738, -0.153383, 0.162355, 0.000000], [-0.160382, 0.025237, 0.986732, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.751209, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.118785, 0.754870, 0.000000]) multmatrix(m=[[0.975287, -0.153470, 0.158900, 0.000000], [-0.156969, 0.024700, 0.987288, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.240748, 1.496112, 0.000000]) multmatrix(m=[[0.974149, -0.153291, 0.165897, 0.000000], [-0.163881, 0.025788, 0.986137, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.240748, 1.496112, 0.000000]) multmatrix(m=[[0.973561, -0.153198, 0.169439, 0.000000], [-0.167380, 0.026339, 0.985541, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.738397, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.240748, 1.496112, 0.000000]) multmatrix(m=[[0.974149, -0.153291, 0.165897, 0.000000], [-0.163881, 0.025788, 0.986137, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.365861, 2.223833, 0.000000]) multmatrix(m=[[0.972930, -0.153099, 0.173071, 0.000000], [-0.170967, 0.026903, 0.984902, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.365861, 2.223833, 0.000000]) multmatrix(m=[[0.972300, -0.153000, 0.176703, 0.000000], [-0.174555, 0.027468, 0.984264, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.725724, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.365861, 2.223833, 0.000000]) multmatrix(m=[[0.972930, -0.153099, 0.173071, 0.000000], [-0.170967, 0.026903, 0.984902, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.494099, 2.938137, 0.000000]) multmatrix(m=[[0.971625, -0.152893, 0.180427, 0.000000], [-0.178233, 0.028047, 0.983581, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.494099, 2.938137, 0.000000]) multmatrix(m=[[0.970950, -0.152787, 0.184151, 0.000000], [-0.181912, 0.028625, 0.982898, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.713190, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.494099, 2.938137, 0.000000]) multmatrix(m=[[0.971625, -0.152893, 0.180427, 0.000000], [-0.178233, 0.028047, 0.983581, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.625433, 3.639130, 0.000000]) multmatrix(m=[[0.970228, -0.152674, 0.187969, 0.000000], [-0.185684, 0.029219, 0.982167, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.625433, 3.639130, 0.000000]) multmatrix(m=[[0.969506, -0.152560, 0.191788, 0.000000], [-0.189457, 0.029813, 0.981436, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.700797, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.625433, 3.639130, 0.000000]) multmatrix(m=[[0.970228, -0.152674, 0.187969, 0.000000], [-0.185684, 0.029219, 0.982167, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.759838, 4.326918, 0.000000]) multmatrix(m=[[0.968734, -0.152439, 0.195704, 0.000000], [-0.193325, 0.030421, 0.980655, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.759838, 4.326918, 0.000000]) multmatrix(m=[[0.967962, -0.152317, 0.199621, 0.000000], [-0.197194, 0.031030, 0.979873, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.688546, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.759838, 4.326918, 0.000000]) multmatrix(m=[[0.968734, -0.152439, 0.195704, 0.000000], [-0.193325, 0.030421, 0.980655, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[0.897286, 5.001606, 0.000000]) multmatrix(m=[[0.967137, -0.152187, 0.203637, 0.000000], [-0.201162, 0.031654, 0.979038, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[0.897286, 5.001606, 0.000000]) multmatrix(m=[[0.966312, -0.152057, 0.207653, 0.000000], [-0.205129, 0.032279, 0.978202, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.676438, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[0.897286, 5.001606, 0.000000]) multmatrix(m=[[0.967137, -0.152187, 0.203637, 0.000000], [-0.201162, 0.031654, 0.979038, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.037750, 5.663300, 0.000000]) multmatrix(m=[[0.965430, -0.151919, 0.211772, 0.000000], [-0.209198, 0.032919, 0.977310, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.037750, 5.663300, 0.000000]) multmatrix(m=[[0.964548, -0.151780, 0.215891, 0.000000], [-0.213267, 0.033559, 0.976417, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.664475, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.037750, 5.663300, 0.000000]) multmatrix(m=[[0.965430, -0.151919, 0.211772, 0.000000], [-0.209198, 0.032919, 0.977310, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.181205, 6.312104, 0.000000]) multmatrix(m=[[0.963607, -0.151632, 0.220116, 0.000000], [-0.217440, 0.034216, 0.975464, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.181205, 6.312104, 0.000000]) multmatrix(m=[[0.962665, -0.151484, 0.224340, 0.000000], [-0.221613, 0.034873, 0.974511, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.652657, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.181205, 6.312104, 0.000000]) multmatrix(m=[[0.963607, -0.151632, 0.220116, 0.000000], [-0.217440, 0.034216, 0.975464, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.327622, 6.948125, 0.000000]) multmatrix(m=[[0.961660, -0.151325, 0.228673, 0.000000], [-0.225893, 0.035546, 0.973493, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.327622, 6.948125, 0.000000]) multmatrix(m=[[0.960654, -0.151167, 0.233006, 0.000000], [-0.230173, 0.036220, 0.972475, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.640986, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.327622, 6.948125, 0.000000]) multmatrix(m=[[0.961660, -0.151325, 0.228673, 0.000000], [-0.225893, 0.035546, 0.973493, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.476975, 7.571469, 0.000000]) multmatrix(m=[[0.959581, -0.150998, 0.237449, 0.000000], [-0.234563, 0.036910, 0.971389, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.476975, 7.571469, 0.000000]) multmatrix(m=[[0.958508, -0.150829, 0.241893, 0.000000], [-0.238952, 0.037601, 0.970303, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.629464, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.476975, 7.571469, 0.000000]) multmatrix(m=[[0.959581, -0.150998, 0.237449, 0.000000], [-0.234563, 0.036910, 0.971389, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.629238, 8.182240, 0.000000]) multmatrix(m=[[0.957364, -0.150649, 0.246450, 0.000000], [-0.243454, 0.038310, 0.969144, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.629238, 8.182240, 0.000000]) multmatrix(m=[[0.956219, -0.150469, 0.251007, 0.000000], [-0.247956, 0.039018, 0.967985, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.618092, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.629238, 8.182240, 0.000000]) multmatrix(m=[[0.957364, -0.150649, 0.246450, 0.000000], [-0.243454, 0.038310, 0.969144, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.784383, 8.780544, 0.000000]) multmatrix(m=[[0.954998, -0.150277, 0.255680, 0.000000], [-0.252572, 0.039744, 0.966749, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.784383, 8.780544, 0.000000]) multmatrix(m=[[0.953777, -0.150085, 0.260353, 0.000000], [-0.257188, 0.040471, 0.965513, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.606871, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.784383, 8.780544, 0.000000]) multmatrix(m=[[0.954998, -0.150277, 0.255680, 0.000000], [-0.252572, 0.039744, 0.966749, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[1.942384, 9.366486, 0.000000]) multmatrix(m=[[0.952475, -0.149880, 0.265145, 0.000000], [-0.261922, 0.041216, 0.964196, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[1.942384, 9.366486, 0.000000]) multmatrix(m=[[0.951174, -0.149675, 0.269937, 0.000000], [-0.266656, 0.041961, 0.962878, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.595804, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[1.942384, 9.366486, 0.000000]) multmatrix(m=[[0.952475, -0.149880, 0.265145, 0.000000], [-0.261922, 0.041216, 0.964196, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.103214, 9.940173, 0.000000]) multmatrix(m=[[0.949786, -0.149457, 0.274851, 0.000000], [-0.271510, 0.042724, 0.961473, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.103214, 9.940173, 0.000000]) multmatrix(m=[[0.948399, -0.149239, 0.279764, 0.000000], [-0.276363, 0.043488, 0.960069, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.584892, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.103214, 9.940173, 0.000000]) multmatrix(m=[[0.949786, -0.149457, 0.274851, 0.000000], [-0.271510, 0.042724, 0.961473, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.266846, 10.501709, 0.000000]) multmatrix(m=[[0.946920, -0.149006, 0.284802, 0.000000], [-0.281340, 0.044271, 0.958572, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.266846, 10.501709, 0.000000]) multmatrix(m=[[0.945442, -0.148773, 0.289839, 0.000000], [-0.286316, 0.045054, 0.957075, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.574136, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.266846, 10.501709, 0.000000]) multmatrix(m=[[0.946920, -0.149006, 0.284802, 0.000000], [-0.281340, 0.044271, 0.958572, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.433253, 11.051200, 0.000000]) multmatrix(m=[[0.943867, -0.148525, 0.295003, 0.000000], [-0.291417, 0.045857, 0.955481, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.433253, 11.051200, 0.000000]) multmatrix(m=[[0.942292, -0.148278, 0.300166, 0.000000], [-0.296518, 0.046660, 0.953887, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.563538, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.433253, 11.051200, 0.000000]) multmatrix(m=[[0.943867, -0.148525, 0.295003, 0.000000], [-0.291417, 0.045857, 0.955481, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.602408, 11.588752, 0.000000]) multmatrix(m=[[0.940615, -0.148014, 0.305459, 0.000000], [-0.301746, 0.047482, 0.952189, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.602408, 11.588752, 0.000000]) multmatrix(m=[[0.938938, -0.147750, 0.310751, 0.000000], [-0.306974, 0.048305, 0.950491, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.553101, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.602408, 11.588752, 0.000000]) multmatrix(m=[[0.940615, -0.148014, 0.305459, 0.000000], [-0.301746, 0.047482, 0.952189, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.774285, 12.114470, 0.000000]) multmatrix(m=[[0.937152, -0.147469, 0.316174, 0.000000], [-0.312331, 0.049148, 0.948684, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.774285, 12.114470, 0.000000]) multmatrix(m=[[0.935367, -0.147188, 0.321597, 0.000000], [-0.317688, 0.049991, 0.946877, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.542826, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.774285, 12.114470, 0.000000]) multmatrix(m=[[0.937152, -0.147469, 0.316174, 0.000000], [-0.312331, 0.049148, 0.948684, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[2.948856, 12.628460, 0.000000]) multmatrix(m=[[0.933467, -0.146889, 0.327153, 0.000000], [-0.323177, 0.050855, 0.944953, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[2.948856, 12.628460, 0.000000]) multmatrix(m=[[0.931566, -0.146590, 0.332709, 0.000000], [-0.328665, 0.051718, 0.943029, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.532716, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[2.948856, 12.628460, 0.000000]) multmatrix(m=[[0.933467, -0.146889, 0.327153, 0.000000], [-0.323177, 0.050855, 0.944953, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.126096, 13.130827, 0.000000]) multmatrix(m=[[0.929545, -0.146272, 0.338400, 0.000000], [-0.334286, 0.052603, 0.940983, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.126096, 13.130827, 0.000000]) multmatrix(m=[[0.927523, -0.145954, 0.344090, 0.000000], [-0.339908, 0.053487, 0.938937, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.522772, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.126096, 13.130827, 0.000000]) multmatrix(m=[[0.929545, -0.146272, 0.338400, 0.000000], [-0.334286, 0.052603, 0.940983, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.305976, 13.621676, 0.000000]) multmatrix(m=[[0.925373, -0.145615, 0.349917, 0.000000], [-0.345663, 0.054393, 0.936760, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.305976, 13.621676, 0.000000]) multmatrix(m=[[0.923223, -0.145277, 0.355743, 0.000000], [-0.351419, 0.055299, 0.934584, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.512996, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.305976, 13.621676, 0.000000]) multmatrix(m=[[0.925373, -0.145615, 0.349917, 0.000000], [-0.345663, 0.054393, 0.936760, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.488471, 14.101113, 0.000000]) multmatrix(m=[[0.920937, -0.144917, 0.361707, 0.000000], [-0.357311, 0.056226, 0.932270, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.488471, 14.101113, 0.000000]) multmatrix(m=[[0.918652, -0.144558, 0.367671, 0.000000], [-0.363202, 0.057153, 0.929956, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.503391, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.488471, 14.101113, 0.000000]) multmatrix(m=[[0.920937, -0.144917, 0.361707, 0.000000], [-0.357311, 0.056226, 0.932270, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[3.673553, 14.569244, 0.000000]) multmatrix(m=[[0.914955, -0.143976, 0.376869, 0.000000], [-0.372288, 0.058583, 0.926213, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[3.673553, 14.569244, 0.000000]) multmatrix(m=[[0.911258, -0.143394, 0.386067, 0.000000], [-0.381374, 0.060012, 0.922471, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.978638, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[3.673553, 14.569244, 0.000000]) multmatrix(m=[[0.914955, -0.143976, 0.376869, 0.000000], [-0.372288, 0.058583, 0.926213, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[4.051373, 15.472009, 0.000000]) multmatrix(m=[[0.905775, -0.142531, 0.398827, 0.000000], [-0.393979, 0.061996, 0.916921, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[4.051373, 15.472009, 0.000000]) multmatrix(m=[[0.900292, -0.141669, 0.411587, 0.000000], [-0.406584, 0.063979, 0.911371, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.942323, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[4.051373, 15.472009, 0.000000]) multmatrix(m=[[0.905775, -0.142531, 0.398827, 0.000000], [-0.393979, 0.061996, 0.916921, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[4.439220, 16.330814, 0.000000]) multmatrix(m=[[0.894119, -0.140697, 0.424900, 0.000000], [-0.419735, 0.066049, 0.905121, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[4.439220, 16.330814, 0.000000]) multmatrix(m=[[0.887945, -0.139726, 0.438213, 0.000000], [-0.432886, 0.068118, 0.898871, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.907460, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[4.439220, 16.330814, 0.000000]) multmatrix(m=[[0.894119, -0.140697, 0.424900, 0.000000], [-0.419735, 0.066049, 0.905121, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[4.836881, 17.146504, 0.000000]) multmatrix(m=[[0.881007, -0.138634, 0.452068, 0.000000], [-0.446573, 0.070272, 0.891848, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[4.836881, 17.146504, 0.000000]) multmatrix(m=[[0.874070, -0.137542, 0.465923, 0.000000], [-0.460260, 0.072426, 0.884825, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.874091, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[4.836881, 17.146504, 0.000000]) multmatrix(m=[[0.881007, -0.138634, 0.452068, 0.000000], [-0.446573, 0.070272, 0.891848, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[5.244141, 17.919922, 0.000000]) multmatrix(m=[[0.866292, -0.136318, 0.480298, 0.000000], [-0.474460, 0.074660, 0.876952, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[5.244141, 17.919922, 0.000000]) multmatrix(m=[[0.858515, -0.135095, 0.494673, 0.000000], [-0.488660, 0.076895, 0.869079, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.842260, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[5.244141, 17.919922, 0.000000]) multmatrix(m=[[0.866292, -0.136318, 0.480298, 0.000000], [-0.474460, 0.074660, 0.876952, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[5.660784, 18.651912, 0.000000]) multmatrix(m=[[0.849820, -0.133726, 0.509534, 0.000000], [-0.503340, 0.079205, 0.860277, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[5.660784, 18.651912, 0.000000]) multmatrix(m=[[0.841126, -0.132358, 0.524394, 0.000000], [-0.518020, 0.081515, 0.851476, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.812010, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[5.660784, 18.651912, 0.000000]) multmatrix(m=[[0.849820, -0.133726, 0.509534, 0.000000], [-0.503340, 0.079205, 0.860277, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[6.086597, 19.343319, 0.000000]) multmatrix(m=[[0.831437, -0.130834, 0.539690, 0.000000], [-0.533130, 0.083893, 0.841668, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[6.086597, 19.343319, 0.000000]) multmatrix(m=[[0.821748, -0.129309, 0.554986, 0.000000], [-0.548240, 0.086270, 0.831860, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.783386, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[6.086597, 19.343319, 0.000000]) multmatrix(m=[[0.831437, -0.130834, 0.539690, 0.000000], [-0.533130, 0.083893, 0.841668, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[6.521366, 19.994986, 0.000000]) multmatrix(m=[[0.810991, -0.127616, 0.570651, 0.000000], [-0.563715, 0.088705, 0.820971, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[6.521366, 19.994986, 0.000000]) multmatrix(m=[[0.800235, -0.125924, 0.586317, 0.000000], [-0.579190, 0.091140, 0.810082, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.756432, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[6.521366, 19.994986, 0.000000]) multmatrix(m=[[0.810991, -0.127616, 0.570651, 0.000000], [-0.563715, 0.088705, 0.820971, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[6.964874, 20.607758, 0.000000]) multmatrix(m=[[0.788344, -0.124053, 0.602267, 0.000000], [-0.594946, 0.093620, 0.798044, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[6.964874, 20.607758, 0.000000]) multmatrix(m=[[0.776452, -0.122181, 0.618218, 0.000000], [-0.610703, 0.096099, 0.786007, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.731190, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[6.964874, 20.607758, 0.000000]) multmatrix(m=[[0.788344, -0.124053, 0.602267, 0.000000], [-0.594946, 0.093620, 0.798044, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[7.416909, 21.182477, 0.000000]) multmatrix(m=[[0.763371, -0.120123, 0.634350, 0.000000], [-0.626639, 0.098607, 0.772764, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[7.416909, 21.182477, 0.000000]) multmatrix(m=[[0.750289, -0.118064, 0.650483, 0.000000], [-0.642576, 0.101115, 0.759521, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.707699, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[7.416909, 21.182477, 0.000000]) multmatrix(m=[[0.763371, -0.120123, 0.634350, 0.000000], [-0.626639, 0.098607, 0.772764, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[7.877254, 21.719990, 0.000000]) multmatrix(m=[[0.735976, -0.115812, 0.666674, 0.000000], [-0.658571, 0.103632, 0.745032, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[7.877254, 21.719990, 0.000000]) multmatrix(m=[[0.721663, -0.113560, 0.682866, 0.000000], [-0.674566, 0.106149, 0.730543, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.685994, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[7.877254, 21.719990, 0.000000]) multmatrix(m=[[0.735976, -0.115812, 0.666674, 0.000000], [-0.658571, 0.103632, 0.745032, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[8.345697, 22.221138, 0.000000]) multmatrix(m=[[0.706099, -0.111111, 0.698978, 0.000000], [-0.690481, 0.108653, 0.714788, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[8.345697, 22.221138, 0.000000]) multmatrix(m=[[0.690536, -0.108662, 0.715090, 0.000000], [-0.706397, 0.111158, 0.699033, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.666105, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[8.345697, 22.221138, 0.000000]) multmatrix(m=[[0.706099, -0.111111, 0.698978, 0.000000], [-0.690481, 0.108653, 0.714788, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[8.822021, 22.686768, 0.000000]) multmatrix(m=[[0.673726, -0.106017, 0.730966, 0.000000], [-0.722081, 0.113626, 0.682016, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[8.822021, 22.686768, 0.000000]) multmatrix(m=[[0.656917, -0.103371, 0.746843, 0.000000], [-0.737765, 0.116094, 0.665000, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.648050, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[8.822021, 22.686768, 0.000000]) multmatrix(m=[[0.673726, -0.106017, 0.730966, 0.000000], [-0.722081, 0.113626, 0.682016, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[9.306014, 23.117721, 0.000000]) multmatrix(m=[[0.638896, -0.100536, 0.762320, 0.000000], [-0.753054, 0.118499, 0.646757, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[9.306014, 23.117721, 0.000000]) multmatrix(m=[[0.620875, -0.097700, 0.777798, 0.000000], [-0.768343, 0.120905, 0.628515, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.631842, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[9.306014, 23.117721, 0.000000]) multmatrix(m=[[0.638896, -0.100536, 0.762320, 0.000000], [-0.753054, 0.118499, 0.646757, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[9.797459, 23.514843, 0.000000]) multmatrix(m=[[0.601709, -0.094684, 0.792706, 0.000000], [-0.783070, 0.123223, 0.609114, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[9.797459, 23.514843, 0.000000]) multmatrix(m=[[0.582544, -0.091668, 0.807613, 0.000000], [-0.797796, 0.125540, 0.589712, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.617478, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[9.797459, 23.514843, 0.000000]) multmatrix(m=[[0.601709, -0.094684, 0.792706, 0.000000], [-0.783070, 0.123223, 0.609114, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[10.296142, 23.878977, 0.000000]) multmatrix(m=[[0.562334, -0.088488, 0.821785, 0.000000], [-0.811796, 0.127743, 0.569254, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[10.296142, 23.878977, 0.000000]) multmatrix(m=[[0.542125, -0.085308, 0.835957, 0.000000], [-0.825795, 0.129946, 0.548795, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.604944, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[10.296142, 23.878977, 0.000000]) multmatrix(m=[[0.562334, -0.088488, 0.821785, 0.000000], [-0.811796, 0.127743, 0.569254, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[10.801849, 24.210968, 0.000000]) multmatrix(m=[[0.521003, -0.081984, 0.849235, 0.000000], [-0.838912, 0.132010, 0.527414, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[10.801849, 24.210968, 0.000000]) multmatrix(m=[[0.499882, -0.078661, 0.862514, 0.000000], [-0.852030, 0.134074, 0.506033, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.594212, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[10.801849, 24.210968, 0.000000]) multmatrix(m=[[0.521003, -0.081984, 0.849235, 0.000000], [-0.838912, 0.132010, 0.527414, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[11.314366, 24.511659, 0.000000]) multmatrix(m=[[0.478011, -0.075219, 0.874761, 0.000000], [-0.864128, 0.135978, 0.483893, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[11.314366, 24.511659, 0.000000]) multmatrix(m=[[0.456140, -0.071778, 0.887008, 0.000000], [-0.876226, 0.137882, 0.461753, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.585238, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[11.314366, 24.511659, 0.000000]) multmatrix(m=[[0.478011, -0.075219, 0.874761, 0.000000], [-0.864128, 0.135978, 0.483893, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[11.833477, 24.781895, 0.000000]) multmatrix(m=[[0.433705, -0.068247, 0.898111, 0.000000], [-0.887194, 0.139607, 0.439042, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[11.833477, 24.781895, 0.000000]) multmatrix(m=[[0.411271, -0.064717, 0.909213, 0.000000], [-0.898161, 0.141333, 0.416331, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577963, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[11.833477, 24.781895, 0.000000]) multmatrix(m=[[0.433705, -0.068247, 0.898111, 0.000000], [-0.887194, 0.139607, 0.439042, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[12.358968, 25.022519, 0.000000]) multmatrix(m=[[0.388473, -0.061130, 0.919087, 0.000000], [-0.907915, 0.142868, 0.393254, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[12.358968, 25.022519, 0.000000]) multmatrix(m=[[0.365676, -0.057542, 0.928962, 0.000000], [-0.917670, 0.144403, 0.370176, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.572313, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[12.358968, 25.022519, 0.000000]) multmatrix(m=[[0.388473, -0.061130, 0.919087, 0.000000], [-0.907915, 0.142868, 0.393254, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[12.890625, 25.234375, 0.000000]) multmatrix(m=[[0.342726, -0.053931, 0.937559, 0.000000], [-0.926162, 0.145740, 0.346943, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[12.890625, 25.234375, 0.000000]) multmatrix(m=[[0.319775, -0.050319, 0.946156, 0.000000], [-0.934655, 0.147076, 0.323710, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.568202, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[12.890625, 25.234375, 0.000000]) multmatrix(m=[[0.342726, -0.053931, 0.937559, 0.000000], [-0.926162, 0.145740, 0.346943, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[13.428233, 25.418308, 0.000000]) multmatrix(m=[[0.296880, -0.046717, 0.953462, 0.000000], [-0.941872, 0.148212, 0.300533, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[13.428233, 25.418308, 0.000000]) multmatrix(m=[[0.273984, -0.043114, 0.960767, 0.000000], [-0.949089, 0.149347, 0.277355, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.565531, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[13.428233, 25.418308, 0.000000]) multmatrix(m=[[0.296880, -0.046717, 0.953462, 0.000000], [-0.941872, 0.148212, 0.300533, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[13.971577, 25.575161, 0.000000]) multmatrix(m=[[0.251341, -0.039551, 0.966800, 0.000000], [-0.955048, 0.150285, 0.254434, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[13.971577, 25.575161, 0.000000]) multmatrix(m=[[0.228698, -0.035988, 0.972832, 0.000000], [-0.961007, 0.151223, 0.231512, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.564194, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[13.971577, 25.575161, 0.000000]) multmatrix(m=[[0.251341, -0.039551, 0.966800, 0.000000], [-0.955048, 0.150285, 0.254434, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[14.520442, 25.705779, 0.000000]) multmatrix(m=[[0.206488, -0.032493, 0.977639, 0.000000], [-0.965755, 0.151970, 0.209029, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[14.520442, 25.705779, 0.000000]) multmatrix(m=[[0.184279, -0.028998, 0.982446, 0.000000], [-0.970504, 0.152717, 0.186546, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.564075, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[14.520442, 25.705779, 0.000000]) multmatrix(m=[[0.206488, -0.032493, 0.977639, 0.000000], [-0.965755, 0.151970, 0.209029, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[15.074615, 25.811005, 0.000000]) multmatrix(m=[[0.162662, -0.025596, 0.986100, 0.000000], [-0.974114, 0.153285, 0.164663, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[15.074615, 25.811005, 0.000000]) multmatrix(m=[[0.141044, -0.022195, 0.989754, 0.000000], [-0.977723, 0.153853, 0.142780, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.565055, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[15.074615, 25.811005, 0.000000]) multmatrix(m=[[0.162662, -0.025596, 0.986100, 0.000000], [-0.974114, 0.153285, 0.164663, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[15.633881, 25.891683, 0.000000]) multmatrix(m=[[0.120153, -0.018907, 0.992347, 0.000000], [-0.980284, 0.154256, 0.121631, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[15.633881, 25.891683, 0.000000]) multmatrix(m=[[0.099261, -0.015620, 0.994939, 0.000000], [-0.982845, 0.154659, 0.100482, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.567013, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[15.633881, 25.891683, 0.000000]) multmatrix(m=[[0.120153, -0.018907, 0.992347, 0.000000], [-0.980284, 0.154256, 0.121631, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[16.198025, 25.948658, 0.000000]) multmatrix(m=[[0.079201, -0.012463, 0.996573, 0.000000], [-0.984459, 0.154913, 0.080176, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[16.198025, 25.948658, 0.000000]) multmatrix(m=[[0.059142, -0.009306, 0.998206, 0.000000], [-0.986072, 0.155167, 0.059869, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.569829, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[16.198025, 25.948658, 0.000000]) multmatrix(m=[[0.079201, -0.012463, 0.996573, 0.000000], [-0.984459, 0.154913, 0.080176, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[16.766832, 25.982773, 0.000000]) multmatrix(m=[[0.039994, -0.006293, 0.998992, 0.000000], [-0.986848, 0.155289, 0.040486, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[16.766832, 25.982773, 0.000000]) multmatrix(m=[[0.020846, -0.003280, 0.999777, 0.000000], [-0.987624, 0.155411, 0.021102, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.573384, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[16.766832, 25.982773, 0.000000]) multmatrix(m=[[0.039994, -0.006293, 0.998992, 0.000000], [-0.986848, 0.155289, 0.040486, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[17.340088, 25.994873, 0.000000]) multmatrix(m=[[0.002665, -0.000419, 0.999827, 0.000000], [-0.987674, 0.155419, 0.002698, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[17.340088, 25.994873, 0.000000]) multmatrix(m=[[-0.015516, 0.002442, 0.999877, 0.000000], [-0.987723, 0.155427, -0.015707, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577562, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[17.340088, 25.994873, 0.000000]) multmatrix(m=[[0.002665, -0.000419, 0.999827, 0.000000], [-0.987674, 0.155419, 0.002698, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[17.917578, 25.985801, 0.000000]) multmatrix(m=[[-0.032697, 0.005145, 0.999301, 0.000000], [-0.987153, 0.155337, -0.033100, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[17.917578, 25.985801, 0.000000]) multmatrix(m=[[-0.049879, 0.007849, 0.998724, 0.000000], [-0.986584, 0.155247, -0.050492, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.582253, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[17.917578, 25.985801, 0.000000]) multmatrix(m=[[-0.032697, 0.005145, 0.999301, 0.000000], [-0.987153, 0.155337, -0.033100, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[18.499088, 25.956402, 0.000000]) multmatrix(m=[[-0.066046, 0.010393, 0.997628, 0.000000], [-0.985501, 0.155077, -0.066859, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[18.499088, 25.956402, 0.000000]) multmatrix(m=[[-0.082214, 0.012937, 0.996531, 0.000000], [-0.984417, 0.154906, -0.083226, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.587353, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[18.499088, 25.956402, 0.000000]) multmatrix(m=[[-0.066046, 0.010393, 0.997628, 0.000000], [-0.985501, 0.155077, -0.066859, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[19.084404, 25.907519, 0.000000]) multmatrix(m=[[-0.097370, 0.015322, 0.995011, 0.000000], [-0.982916, 0.154670, -0.098569, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[19.084404, 25.907519, 0.000000]) multmatrix(m=[[-0.112527, 0.017707, 0.993491, 0.000000], [-0.981414, 0.154434, -0.113911, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.592764, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[19.084404, 25.907519, 0.000000]) multmatrix(m=[[-0.097370, 0.015322, 0.995011, 0.000000], [-0.982916, 0.154670, -0.098569, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[19.673309, 25.839996, 0.000000]) multmatrix(m=[[-0.126686, 0.019935, 0.991637, 0.000000], [-0.979583, 0.154146, -0.128245, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[19.673309, 25.839996, 0.000000]) multmatrix(m=[[-0.140845, 0.022163, 0.989784, 0.000000], [-0.977752, 0.153858, -0.142578, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.598395, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[19.673309, 25.839996, 0.000000]) multmatrix(m=[[-0.126686, 0.019935, 0.991637, 0.000000], [-0.979583, 0.154146, -0.128245, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[20.265591, 25.754678, 0.000000]) multmatrix(m=[[-0.154031, 0.024238, 0.987676, 0.000000], [-0.975670, 0.153530, -0.155927, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[20.265591, 25.754678, 0.000000]) multmatrix(m=[[-0.167218, 0.026313, 0.985569, 0.000000], [-0.973589, 0.153202, -0.169275, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.604162, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[20.265591, 25.754678, 0.000000]) multmatrix(m=[[-0.154031, 0.024238, 0.987676, 0.000000], [-0.975670, 0.153530, -0.155927, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[20.861034, 25.652409, 0.000000]) multmatrix(m=[[-0.179462, 0.028240, 0.983279, 0.000000], [-0.971326, 0.152846, -0.181670, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[20.861034, 25.652409, 0.000000]) multmatrix(m=[[-0.191706, 0.030167, 0.980989, 0.000000], [-0.969064, 0.152490, -0.194065, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.609987, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[20.861034, 25.652409, 0.000000]) multmatrix(m=[[-0.179462, 0.028240, 0.983279, 0.000000], [-0.971326, 0.152846, -0.181670, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[21.459424, 25.534031, 0.000000]) multmatrix(m=[[-0.203044, 0.031951, 0.978578, 0.000000], [-0.966683, 0.152116, -0.205543, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[21.459424, 25.534031, 0.000000]) multmatrix(m=[[-0.214382, 0.033735, 0.976167, 0.000000], [-0.964301, 0.151741, -0.217020, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.615799, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[21.459424, 25.534031, 0.000000]) multmatrix(m=[[-0.203044, 0.031951, 0.978578, 0.000000], [-0.966683, 0.152116, -0.205543, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[22.060547, 25.400391, 0.000000]) multmatrix(m=[[-0.224852, 0.035382, 0.973689, 0.000000], [-0.961854, 0.151356, -0.227619, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[22.060547, 25.400391, 0.000000]) multmatrix(m=[[-0.235322, 0.037030, 0.971212, 0.000000], [-0.959406, 0.150971, -0.238218, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.621533, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[22.060547, 25.400391, 0.000000]) multmatrix(m=[[-0.224852, 0.035382, 0.973689, 0.000000], [-0.961854, 0.151356, -0.227619, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[22.664187, 25.252330, 0.000000]) multmatrix(m=[[-0.244964, 0.038547, 0.968713, 0.000000], [-0.956938, 0.150582, -0.247978, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[22.664187, 25.252330, 0.000000]) multmatrix(m=[[-0.254606, 0.040064, 0.966215, 0.000000], [-0.954470, 0.150194, -0.257739, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.627131, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[22.664187, 25.252330, 0.000000]) multmatrix(m=[[-0.244964, 0.038547, 0.968713, 0.000000], [-0.956938, 0.150582, -0.247978, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[23.270130, 25.090694, 0.000000]) multmatrix(m=[[-0.263459, 0.041457, 0.963735, 0.000000], [-0.952020, 0.149808, -0.266700, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[23.270130, 25.090694, 0.000000]) multmatrix(m=[[-0.272312, 0.042851, 0.961255, 0.000000], [-0.949570, 0.149423, -0.275662, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.632540, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[23.270130, 25.090694, 0.000000]) multmatrix(m=[[-0.263459, 0.041457, 0.963735, 0.000000], [-0.952020, 0.149808, -0.266700, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[23.878162, 24.916327, 0.000000]) multmatrix(m=[[-0.280415, 0.044126, 0.958826, 0.000000], [-0.947171, 0.149045, -0.283865, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[23.878162, 24.916327, 0.000000]) multmatrix(m=[[-0.288518, 0.045401, 0.956398, 0.000000], [-0.944772, 0.148668, -0.292068, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.637711, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[23.878162, 24.916327, 0.000000]) multmatrix(m=[[-0.280415, 0.044126, 0.958826, 0.000000], [-0.947171, 0.149045, -0.283865, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[24.488068, 24.730072, 0.000000]) multmatrix(m=[[-0.295908, 0.046564, 0.954049, 0.000000], [-0.942452, 0.148303, -0.299549, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[24.488068, 24.730072, 0.000000]) multmatrix(m=[[-0.303298, 0.047727, 0.951700, 0.000000], [-0.940131, 0.147938, -0.307030, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.642603, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[24.488068, 24.730072, 0.000000]) multmatrix(m=[[-0.295908, 0.046564, 0.954049, 0.000000], [-0.942452, 0.148303, -0.299549, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[25.099633, 24.532773, 0.000000]) multmatrix(m=[[-0.310011, 0.048783, 0.949454, 0.000000], [-0.937913, 0.147589, -0.313826, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[25.099633, 24.532773, 0.000000]) multmatrix(m=[[-0.316724, 0.049839, 0.947208, 0.000000], [-0.935694, 0.147239, -0.320621, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.647176, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[25.099633, 24.532773, 0.000000]) multmatrix(m=[[-0.310011, 0.048783, 0.949454, 0.000000], [-0.937913, 0.147589, -0.313826, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[25.712643, 24.325275, 0.000000]) multmatrix(m=[[-0.322791, 0.050794, 0.945084, 0.000000], [-0.933596, 0.146909, -0.326763, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[25.712643, 24.325275, 0.000000]) multmatrix(m=[[-0.328859, 0.051749, 0.942960, 0.000000], [-0.931498, 0.146579, -0.332906, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.651396, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[25.712643, 24.325275, 0.000000]) multmatrix(m=[[-0.322791, 0.050794, 0.945084, 0.000000], [-0.933596, 0.146909, -0.326763, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[26.326883, 24.108422, 0.000000]) multmatrix(m=[[-0.334313, 0.052607, 0.940975, 0.000000], [-0.929536, 0.146270, -0.338427, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[26.326883, 24.108422, 0.000000]) multmatrix(m=[[-0.339766, 0.053465, 0.938989, 0.000000], [-0.927575, 0.145962, -0.343947, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.655232, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[26.326883, 24.108422, 0.000000]) multmatrix(m=[[-0.334313, 0.052607, 0.940975, 0.000000], [-0.929536, 0.146270, -0.338427, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[26.942139, 23.883057, 0.000000]) multmatrix(m=[[-0.344632, 0.054231, 0.937155, 0.000000], [-0.925764, 0.145677, -0.348873, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[26.942139, 23.883057, 0.000000]) multmatrix(m=[[-0.349499, 0.054997, 0.935321, 0.000000], [-0.923952, 0.145392, -0.353799, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.658658, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[26.942139, 23.883057, 0.000000]) multmatrix(m=[[-0.344632, 0.054231, 0.937155, 0.000000], [-0.925764, 0.145677, -0.348873, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[27.558196, 23.650024, 0.000000]) multmatrix(m=[[-0.353802, 0.055674, 0.933650, 0.000000], [-0.922301, 0.145132, -0.358156, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[27.558196, 23.650024, 0.000000]) multmatrix(m=[[-0.358106, 0.056351, 0.931979, 0.000000], [-0.920650, 0.144872, -0.362513, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.661650, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[27.558196, 23.650024, 0.000000]) multmatrix(m=[[-0.353802, 0.055674, 0.933650, 0.000000], [-0.922301, 0.145132, -0.358156, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[28.174839, 23.410168, 0.000000]) multmatrix(m=[[-0.361869, 0.056943, 0.930479, 0.000000], [-0.919169, 0.144639, -0.366322, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[28.174839, 23.410168, 0.000000]) multmatrix(m=[[-0.365632, 0.057535, 0.928980, 0.000000], [-0.917687, 0.144406, -0.370131, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.664186, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[28.174839, 23.410168, 0.000000]) multmatrix(m=[[-0.361869, 0.056943, 0.930479, 0.000000], [-0.919169, 0.144639, -0.366322, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[28.791854, 23.164332, 0.000000]) multmatrix(m=[[-0.368873, 0.058045, 0.927659, 0.000000], [-0.916383, 0.144201, -0.373412, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[28.791854, 23.164332, 0.000000]) multmatrix(m=[[-0.372114, 0.058555, 0.926338, 0.000000], [-0.915078, 0.143995, -0.376693, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.666250, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[28.791854, 23.164332, 0.000000]) multmatrix(m=[[-0.368873, 0.058045, 0.927659, 0.000000], [-0.916383, 0.144201, -0.373412, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[29.409027, 22.913361, 0.000000]) multmatrix(m=[[-0.374849, 0.058986, 0.925203, 0.000000], [-0.913956, 0.143819, -0.379461, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[29.409027, 22.913361, 0.000000]) multmatrix(m=[[-0.377584, 0.059416, 0.924067, 0.000000], [-0.912835, 0.143642, -0.382230, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.667825, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[29.409027, 22.913361, 0.000000]) multmatrix(m=[[-0.374849, 0.058986, 0.925203, 0.000000], [-0.913956, 0.143819, -0.379461, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[30.026143, 22.658098, 0.000000]) multmatrix(m=[[-0.379826, 0.059769, 0.923122, 0.000000], [-0.911901, 0.143495, -0.384500, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[30.026143, 22.658098, 0.000000]) multmatrix(m=[[-0.382068, 0.060122, 0.922176, 0.000000], [-0.910967, 0.143348, -0.386770, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.668900, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[30.026143, 22.658098, 0.000000]) multmatrix(m=[[-0.379826, 0.059769, 0.923122, 0.000000], [-0.911901, 0.143495, -0.384500, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[30.642986, 22.399387, 0.000000]) multmatrix(m=[[-0.383829, 0.060399, 0.921425, 0.000000], [-0.910224, 0.143232, -0.388552, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[30.642986, 22.399387, 0.000000]) multmatrix(m=[[-0.385589, 0.060676, 0.920674, 0.000000], [-0.909482, 0.143115, -0.390333, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.669463, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[30.642986, 22.399387, 0.000000]) multmatrix(m=[[-0.383829, 0.060399, 0.921425, 0.000000], [-0.910224, 0.143232, -0.388552, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[31.259344, 22.138073, 0.000000]) multmatrix(m=[[-0.386874, 0.060878, 0.920120, 0.000000], [-0.908935, 0.143029, -0.391635, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[31.259344, 22.138073, 0.000000]) multmatrix(m=[[-0.388159, 0.061080, 0.919566, 0.000000], [-0.908388, 0.142943, -0.392936, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.669508, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[31.259344, 22.138073, 0.000000]) multmatrix(m=[[-0.386874, 0.060878, 0.920120, 0.000000], [-0.908935, 0.143029, -0.391635, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[31.875000, 21.875000, 0.000000]) multmatrix(m=[[-0.388975, 0.061208, 0.919212, 0.000000], [-0.908039, 0.142888, -0.393761, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[31.875000, 21.875000, 0.000000]) multmatrix(m=[[-0.389790, 0.061337, 0.918859, 0.000000], [-0.907689, 0.142833, -0.394587, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.669027, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[31.875000, 21.875000, 0.000000]) multmatrix(m=[[-0.388975, 0.061208, 0.919212, 0.000000], [-0.908039, 0.142888, -0.393761, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[32.489741, 21.611011, 0.000000]) multmatrix(m=[[-0.390138, 0.061392, 0.918707, 0.000000], [-0.907540, 0.142809, -0.394939, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[32.489741, 21.611011, 0.000000]) multmatrix(m=[[-0.390485, 0.061446, 0.918556, 0.000000], [-0.907391, 0.142786, -0.395290, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.668017, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[32.489741, 21.611011, 0.000000]) multmatrix(m=[[-0.390138, 0.061392, 0.918707, 0.000000], [-0.907540, 0.142809, -0.394939, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[33.103352, 21.346951, 0.000000]) multmatrix(m=[[-0.390364, 0.061427, 0.918609, 0.000000], [-0.907443, 0.142794, -0.395168, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[33.103352, 21.346951, 0.000000]) multmatrix(m=[[-0.390243, 0.061408, 0.918662, 0.000000], [-0.907495, 0.142802, -0.395045, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.666476, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[33.103352, 21.346951, 0.000000]) multmatrix(m=[[-0.390364, 0.061427, 0.918609, 0.000000], [-0.907443, 0.142794, -0.395168, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[33.715618, 21.083663, 0.000000]) multmatrix(m=[[-0.389649, 0.061315, 0.918920, 0.000000], [-0.907750, 0.142842, -0.394444, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[33.715618, 21.083663, 0.000000]) multmatrix(m=[[-0.389056, 0.061221, 0.919178, 0.000000], [-0.908005, 0.142882, -0.393843, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.664406, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[33.715618, 21.083663, 0.000000]) multmatrix(m=[[-0.389649, 0.061315, 0.918920, 0.000000], [-0.907750, 0.142842, -0.394444, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[34.326324, 20.821991, 0.000000]) multmatrix(m=[[-0.387983, 0.061052, 0.919641, 0.000000], [-0.908463, 0.142954, -0.392757, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[34.326324, 20.821991, 0.000000]) multmatrix(m=[[-0.386910, 0.060884, 0.920105, 0.000000], [-0.908921, 0.143026, -0.391671, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.661808, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[34.326324, 20.821991, 0.000000]) multmatrix(m=[[-0.387983, 0.061052, 0.919641, 0.000000], [-0.908463, 0.142954, -0.392757, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[34.935257, 20.562780, 0.000000]) multmatrix(m=[[-0.385349, 0.060638, 0.920775, 0.000000], [-0.909582, 0.143131, -0.390090, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[34.935257, 20.562780, 0.000000]) multmatrix(m=[[-0.383787, 0.060392, 0.921445, 0.000000], [-0.910244, 0.143235, -0.388510, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.658688, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[34.935257, 20.562780, 0.000000]) multmatrix(m=[[-0.385349, 0.060638, 0.920775, 0.000000], [-0.909582, 0.143131, -0.390090, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[35.542202, 20.306873, 0.000000]) multmatrix(m=[[-0.381724, 0.060067, 0.922320, 0.000000], [-0.911108, 0.143371, -0.386421, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[35.542202, 20.306873, 0.000000]) multmatrix(m=[[-0.379661, 0.059743, 0.923195, 0.000000], [-0.911973, 0.143507, -0.384332, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.655053, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[35.542202, 20.306873, 0.000000]) multmatrix(m=[[-0.381724, 0.060067, 0.922320, 0.000000], [-0.911108, 0.143371, -0.386421, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[36.146944, 20.055115, 0.000000]) multmatrix(m=[[-0.377080, 0.059337, 0.924274, 0.000000], [-0.913039, 0.143674, -0.381720, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[36.146944, 20.055115, 0.000000]) multmatrix(m=[[-0.374499, 0.058931, 0.925353, 0.000000], [-0.914105, 0.143842, -0.379107, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.650913, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[36.146944, 20.055115, 0.000000]) multmatrix(m=[[-0.377080, 0.059337, 0.924274, 0.000000], [-0.913039, 0.143674, -0.381720, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[36.749268, 19.808350, 0.000000]) multmatrix(m=[[-0.371381, 0.058440, 0.926633, 0.000000], [-0.915370, 0.144041, -0.375951, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[36.749268, 19.808350, 0.000000]) multmatrix(m=[[-0.368262, 0.057949, 0.927914, 0.000000], [-0.916635, 0.144240, -0.372794, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.646279, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[36.749268, 19.808350, 0.000000]) multmatrix(m=[[-0.371381, 0.058440, 0.926633, 0.000000], [-0.915370, 0.144041, -0.375951, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[37.348959, 19.567420, 0.000000]) multmatrix(m=[[-0.364584, 0.057370, 0.929393, 0.000000], [-0.918096, 0.144470, -0.369070, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[37.348959, 19.567420, 0.000000]) multmatrix(m=[[-0.360906, 0.056792, 0.930872, 0.000000], [-0.919556, 0.144700, -0.365347, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.641168, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[37.348959, 19.567420, 0.000000]) multmatrix(m=[[-0.364584, 0.057370, 0.929393, 0.000000], [-0.918096, 0.144470, -0.369070, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[37.945805, 19.333172, 0.000000]) multmatrix(m=[[-0.356640, 0.056120, 0.932543, 0.000000], [-0.921208, 0.144960, -0.361029, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[37.945805, 19.333172, 0.000000]) multmatrix(m=[[-0.352375, 0.055449, 0.934215, 0.000000], [-0.922859, 0.145220, -0.356711, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.635597, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[37.945805, 19.333172, 0.000000]) multmatrix(m=[[-0.356640, 0.056120, 0.932543, 0.000000], [-0.921208, 0.144960, -0.361029, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[38.539588, 19.106448, 0.000000]) multmatrix(m=[[-0.347491, 0.054681, 0.936073, 0.000000], [-0.924694, 0.145508, -0.351767, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[38.539588, 19.106448, 0.000000]) multmatrix(m=[[-0.342608, 0.053912, 0.937930, 0.000000], [-0.926529, 0.145797, -0.346824, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.629586, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[38.539588, 19.106448, 0.000000]) multmatrix(m=[[-0.347491, 0.054681, 0.936073, 0.000000], [-0.924694, 0.145508, -0.351767, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[39.130096, 18.888092, 0.000000]) multmatrix(m=[[-0.337072, 0.053041, 0.939965, 0.000000], [-0.928539, 0.146113, -0.341220, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[39.130096, 18.888092, 0.000000]) multmatrix(m=[[-0.331537, 0.052170, 0.941999, 0.000000], [-0.930548, 0.146430, -0.335616, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.623162, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[39.130096, 18.888092, 0.000000]) multmatrix(m=[[-0.337072, 0.053041, 0.939965, 0.000000], [-0.928539, 0.146113, -0.341220, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[39.717114, 18.678949, 0.000000]) multmatrix(m=[[-0.325309, 0.051190, 0.944197, 0.000000], [-0.932720, 0.146771, -0.329312, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[39.717114, 18.678949, 0.000000]) multmatrix(m=[[-0.319082, 0.050210, 0.946396, 0.000000], [-0.934892, 0.147113, -0.323008, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.616351, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[39.717114, 18.678949, 0.000000]) multmatrix(m=[[-0.325309, 0.051190, 0.944197, 0.000000], [-0.932720, 0.146771, -0.329312, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[40.300426, 18.479862, 0.000000]) multmatrix(m=[[-0.312120, 0.049115, 0.948743, 0.000000], [-0.937211, 0.147478, -0.315961, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[40.300426, 18.479862, 0.000000]) multmatrix(m=[[-0.305158, 0.048019, 0.951090, 0.000000], [-0.939529, 0.147843, -0.308913, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.609188, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[40.300426, 18.479862, 0.000000]) multmatrix(m=[[-0.312120, 0.049115, 0.948743, 0.000000], [-0.937211, 0.147478, -0.315961, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[40.879819, 18.291676, 0.000000]) multmatrix(m=[[-0.297414, 0.046801, 0.953565, 0.000000], [-0.941974, 0.148228, -0.301074, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[40.879819, 18.291676, 0.000000]) multmatrix(m=[[-0.289670, 0.045582, 0.956041, 0.000000], [-0.944419, 0.148612, -0.293234, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.601709, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[40.879819, 18.291676, 0.000000]) multmatrix(m=[[-0.297414, 0.046801, 0.953565, 0.000000], [-0.941974, 0.148228, -0.301074, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[41.455078, 18.115234, 0.000000]) multmatrix(m=[[-0.281091, 0.044232, 0.958618, 0.000000], [-0.946966, 0.149013, -0.284550, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[41.455078, 18.115234, 0.000000]) multmatrix(m=[[-0.272513, 0.042882, 0.961196, 0.000000], [-0.949512, 0.149414, -0.275867, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.593958, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[41.455078, 18.115234, 0.000000]) multmatrix(m=[[-0.281091, 0.044232, 0.958618, 0.000000], [-0.946966, 0.149013, -0.284550, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[42.025988, 17.951381, 0.000000]) multmatrix(m=[[-0.263046, 0.041392, 0.963844, 0.000000], [-0.952128, 0.149825, -0.266283, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[42.025988, 17.951381, 0.000000]) multmatrix(m=[[-0.253578, 0.039903, 0.966492, 0.000000], [-0.954743, 0.150237, -0.256698, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.585982, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[42.025988, 17.951381, 0.000000]) multmatrix(m=[[-0.263046, 0.041392, 0.963844, 0.000000], [-0.952128, 0.149825, -0.266283, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[42.592335, 17.800961, 0.000000]) multmatrix(m=[[-0.243162, 0.038264, 0.969170, 0.000000], [-0.957389, 0.150653, -0.246154, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[42.592335, 17.800961, 0.000000]) multmatrix(m=[[-0.232746, 0.036625, 0.971848, 0.000000], [-0.960034, 0.151070, -0.235610, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577836, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[42.592335, 17.800961, 0.000000]) multmatrix(m=[[-0.243162, 0.038264, 0.969170, 0.000000], [-0.957389, 0.150653, -0.246154, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[43.153903, 17.664816, 0.000000]) multmatrix(m=[[-0.221321, 0.034827, 0.974507, 0.000000], [-0.962661, 0.151483, -0.224044, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[43.153903, 17.664816, 0.000000]) multmatrix(m=[[-0.209895, 0.033029, 0.977166, 0.000000], [-0.965288, 0.151896, -0.212478, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.569582, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[43.153903, 17.664816, 0.000000]) multmatrix(m=[[-0.221321, 0.034827, 0.974507, 0.000000], [-0.962661, 0.151483, -0.224044, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[43.710480, 17.543793, 0.000000]) multmatrix(m=[[-0.197397, 0.031062, 0.979746, 0.000000], [-0.967837, 0.152297, -0.199826, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[43.710480, 17.543793, 0.000000]) multmatrix(m=[[-0.184900, 0.029096, 0.982327, 0.000000], [-0.970386, 0.152698, -0.187175, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.561289, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[43.710480, 17.543793, 0.000000]) multmatrix(m=[[-0.197397, 0.031062, 0.979746, 0.000000], [-0.967837, 0.152297, -0.199826, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[44.261849, 17.438734, 0.000000]) multmatrix(m=[[-0.171268, 0.026950, 0.984756, 0.000000], [-0.972786, 0.153076, -0.173375, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[44.261849, 17.438734, 0.000000]) multmatrix(m=[[-0.157636, 0.024805, 0.987186, 0.000000], [-0.975186, 0.153454, -0.159575, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.553034, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[44.261849, 17.438734, 0.000000]) multmatrix(m=[[-0.171268, 0.026950, 0.984756, 0.000000], [-0.972786, 0.153076, -0.173375, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[44.807796, 17.350483, 0.000000]) multmatrix(m=[[-0.142811, 0.022472, 0.989379, 0.000000], [-0.977352, 0.153795, -0.144568, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[44.807796, 17.350483, 0.000000]) multmatrix(m=[[-0.127986, 0.020140, 0.991571, 0.000000], [-0.979518, 0.154136, -0.129561, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.544904, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[44.807796, 17.350483, 0.000000]) multmatrix(m=[[-0.142811, 0.022472, 0.989379, 0.000000], [-0.977352, 0.153795, -0.144568, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[45.348108, 17.279885, 0.000000]) multmatrix(m=[[-0.111915, 0.017611, 0.993427, 0.000000], [-0.981351, 0.154424, -0.113293, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[45.348108, 17.279885, 0.000000]) multmatrix(m=[[-0.095845, 0.015082, 0.995282, 0.000000], [-0.983184, 0.154712, -0.097025, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.536994, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[45.348108, 17.279885, 0.000000]) multmatrix(m=[[-0.111915, 0.017611, 0.993427, 0.000000], [-0.981351, 0.154424, -0.113293, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[45.882568, 17.227783, 0.000000]) multmatrix(m=[[-0.078488, 0.012351, 0.996683, 0.000000], [-0.984567, 0.154930, -0.079453, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[45.882568, 17.227783, 0.000000]) multmatrix(m=[[-0.061130, 0.009619, 0.998083, 0.000000], [-0.985951, 0.155148, -0.061882, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.529410, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[45.882568, 17.227783, 0.000000]) multmatrix(m=[[-0.078488, 0.012351, 0.996683, 0.000000], [-0.984567, 0.154930, -0.079453, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[46.410964, 17.195022, 0.000000]) multmatrix(m=[[-0.042459, 0.006681, 0.998897, 0.000000], [-0.986755, 0.155274, -0.042982, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[46.410964, 17.195022, 0.000000]) multmatrix(m=[[-0.023788, 0.003743, 0.999710, 0.000000], [-0.987558, 0.155401, -0.024081, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.522267, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[46.410964, 17.195022, 0.000000]) multmatrix(m=[[-0.042459, 0.006681, 0.998897, 0.000000], [-0.986755, 0.155274, -0.042982, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[46.933079, 17.182446, 0.000000]) multmatrix(m=[[-0.003799, 0.000598, 0.999788, 0.000000], [-0.987635, 0.155413, -0.003846, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[46.933079, 17.182446, 0.000000]) multmatrix(m=[[0.016190, -0.002548, 0.999866, 0.000000], [-0.987712, 0.155425, 0.016390, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.515690, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[46.933079, 17.182446, 0.000000]) multmatrix(m=[[-0.003799, 0.000598, 0.999788, 0.000000], [-0.987635, 0.155413, -0.003846, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[47.448699, 17.190897, 0.000000]) multmatrix(m=[[0.037474, -0.005897, 0.999048, 0.000000], [-0.986904, 0.155298, 0.037935, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[47.448699, 17.190897, 0.000000]) multmatrix(m=[[0.058758, -0.009246, 0.998229, 0.000000], [-0.986095, 0.155171, 0.059481, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.509814, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[47.448699, 17.190897, 0.000000]) multmatrix(m=[[0.037474, -0.005897, 0.999048, 0.000000], [-0.986904, 0.155298, 0.037935, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[47.957611, 17.221222, 0.000000]) multmatrix(m=[[0.081279, -0.012790, 0.996347, 0.000000], [-0.984236, 0.154878, 0.082279, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[47.957611, 17.221222, 0.000000]) multmatrix(m=[[0.103800, -0.016334, 0.994464, 0.000000], [-0.982376, 0.154585, 0.105077, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.504782, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[47.957611, 17.221222, 0.000000]) multmatrix(m=[[0.081279, -0.012790, 0.996347, 0.000000], [-0.984236, 0.154878, 0.082279, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[48.459599, 17.274263, 0.000000]) multmatrix(m=[[0.127458, -0.020057, 0.991347, 0.000000], [-0.979297, 0.154101, 0.129026, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[48.459599, 17.274263, 0.000000]) multmatrix(m=[[0.151116, -0.023779, 0.988230, 0.000000], [-0.976217, 0.153616, 0.152976, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.500743, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[48.459599, 17.274263, 0.000000]) multmatrix(m=[[0.127458, -0.020057, 0.991347, 0.000000], [-0.979297, 0.154101, 0.129026, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[48.954449, 17.350864, 0.000000]) multmatrix(m=[[0.188512, -0.029664, 0.980865, 0.000000], [-0.968942, 0.152471, 0.190831, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[48.954449, 17.350864, 0.000000]) multmatrix(m=[[0.225908, -0.035548, 0.973500, 0.000000], [-0.961666, 0.151326, 0.228687, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.993761, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[48.954449, 17.350864, 0.000000]) multmatrix(m=[[0.188512, -0.029664, 0.980865, 0.000000], [-0.968942, 0.152471, 0.190831, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[49.921875, 17.578125, 0.000000]) multmatrix(m=[[0.277859, -0.043724, 0.958060, 0.000000], [-0.946414, 0.148926, 0.281278, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[49.921875, 17.578125, 0.000000]) multmatrix(m=[[0.329811, -0.051899, 0.942619, 0.000000], [-0.931161, 0.146526, 0.333870, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.993294, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[49.921875, 17.578125, 0.000000]) multmatrix(m=[[0.277859, -0.043724, 0.958060, 0.000000], [-0.946414, 0.148926, 0.281278, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[50.858173, 17.909756, 0.000000]) multmatrix(m=[[0.369144, -0.058088, 0.926561, 0.000000], [-0.915298, 0.144030, 0.373686, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[50.858173, 17.909756, 0.000000]) multmatrix(m=[[0.408477, -0.064277, 0.910503, 0.000000], [-0.899435, 0.141534, 0.413503, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.500756, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[50.858173, 17.909756, 0.000000]) multmatrix(m=[[0.369144, -0.058088, 0.926561, 0.000000], [-0.915298, 0.144030, 0.373686, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[51.314113, 18.116820, 0.000000]) multmatrix(m=[[0.434399, -0.068356, 0.897647, 0.000000], [-0.886736, 0.139535, 0.439745, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[51.314113, 18.116820, 0.000000]) multmatrix(m=[[0.460322, -0.072436, 0.884792, 0.000000], [-0.874037, 0.137537, 0.465986, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.505785, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[51.314113, 18.116820, 0.000000]) multmatrix(m=[[0.434399, -0.068356, 0.897647, 0.000000], [-0.886736, 0.139535, 0.439745, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[51.761627, 18.352509, 0.000000]) multmatrix(m=[[0.485579, -0.076410, 0.870352, 0.000000], [-0.859772, 0.135292, 0.491554, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[51.761627, 18.352509, 0.000000]) multmatrix(m=[[0.510836, -0.080384, 0.855912, 0.000000], [-0.845508, 0.133048, 0.517122, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.512756, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[51.761627, 18.352509, 0.000000]) multmatrix(m=[[0.485579, -0.076410, 0.870352, 0.000000], [-0.859772, 0.135292, 0.491554, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[52.200501, 18.617666, 0.000000]) multmatrix(m=[[0.535131, -0.084207, 0.840052, 0.000000], [-0.829841, 0.130583, 0.541716, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[52.200501, 18.617666, 0.000000]) multmatrix(m=[[0.559426, -0.088030, 0.824192, 0.000000], [-0.814174, 0.128117, 0.566310, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.521746, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[52.200501, 18.617666, 0.000000]) multmatrix(m=[[0.535131, -0.084207, 0.840052, 0.000000], [-0.829841, 0.130583, 0.541716, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[52.630520, 18.913136, 0.000000]) multmatrix(m=[[0.582502, -0.091662, 0.807126, 0.000000], [-0.797315, 0.125464, 0.589670, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[52.630520, 18.913136, 0.000000]) multmatrix(m=[[0.605578, -0.095293, 0.790060, 0.000000], [-0.780456, 0.122811, 0.613029, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.532807, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[52.630520, 18.913136, 0.000000]) multmatrix(m=[[0.582502, -0.091662, 0.807126, 0.000000], [-0.797315, 0.125464, 0.589670, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[53.051469, 19.239762, 0.000000]) multmatrix(m=[[0.627228, -0.098700, 0.772035, 0.000000], [-0.762650, 0.120010, 0.634946, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[53.051469, 19.239762, 0.000000]) multmatrix(m=[[0.648879, -0.102107, 0.754009, 0.000000], [-0.744844, 0.117208, 0.656864, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.545969, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[53.051469, 19.239762, 0.000000]) multmatrix(m=[[0.627228, -0.098700, 0.772035, 0.000000], [-0.762650, 0.120010, 0.634946, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[53.463135, 19.598389, 0.000000]) multmatrix(m=[[0.668957, -0.105266, 0.735290, 0.000000], [-0.726352, 0.114298, 0.677189, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[53.463135, 19.598389, 0.000000]) multmatrix(m=[[0.689035, -0.108426, 0.716571, 0.000000], [-0.707861, 0.111388, 0.697514, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.561238, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[53.463135, 19.598389, 0.000000]) multmatrix(m=[[0.668957, -0.105266, 0.735290, 0.000000], [-0.726352, 0.114298, 0.677189, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[53.865302, 19.989860, 0.000000]) multmatrix(m=[[0.707454, -0.111324, 0.697425, 0.000000], [-0.688947, 0.108412, 0.716159, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[53.865302, 19.989860, 0.000000]) multmatrix(m=[[0.725873, -0.114222, 0.678279, 0.000000], [-0.670034, 0.105436, 0.734805, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.578602, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[53.865302, 19.989860, 0.000000]) multmatrix(m=[[0.707454, -0.111324, 0.697425, 0.000000], [-0.688947, 0.108412, 0.716159, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[54.257755, 20.415020, 0.000000]) multmatrix(m=[[0.742602, -0.116855, 0.658959, 0.000000], [-0.650949, 0.102432, 0.751740, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[54.257755, 20.415020, 0.000000]) multmatrix(m=[[0.759331, -0.119487, 0.639640, 0.000000], [-0.631865, 0.099429, 0.768674, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.598033, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[54.257755, 20.415020, 0.000000]) multmatrix(m=[[0.742602, -0.116855, 0.658959, 0.000000], [-0.650949, 0.102432, 0.751740, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[54.640281, 20.874712, 0.000000]) multmatrix(m=[[0.774389, -0.121857, 0.620379, 0.000000], [-0.612838, 0.096435, 0.783918, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[54.640281, 20.874712, 0.000000]) multmatrix(m=[[0.789447, -0.124226, 0.601117, 0.000000], [-0.593810, 0.093441, 0.799161, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.619486, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[54.640281, 20.874712, 0.000000]) multmatrix(m=[[0.774389, -0.121857, 0.620379, 0.000000], [-0.612838, 0.096435, 0.783918, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[55.012665, 21.369781, 0.000000]) multmatrix(m=[[0.802893, -0.126342, 0.582112, 0.000000], [-0.575036, 0.090487, 0.812772, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[55.012665, 21.369781, 0.000000]) multmatrix(m=[[0.816339, -0.128458, 0.563107, 0.000000], [-0.556262, 0.087533, 0.826384, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.642909, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[55.012665, 21.369781, 0.000000]) multmatrix(m=[[0.802893, -0.126342, 0.582112, 0.000000], [-0.575036, 0.090487, 0.812772, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[55.374691, 21.901071, 0.000000]) multmatrix(m=[[0.828261, -0.130334, 0.544524, 0.000000], [-0.537905, 0.084644, 0.838453, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[55.374691, 21.901071, 0.000000]) multmatrix(m=[[0.840183, -0.132210, 0.525940, 0.000000], [-0.519547, 0.081755, 0.850522, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.668242, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[55.374691, 21.901071, 0.000000]) multmatrix(m=[[0.828261, -0.130334, 0.544524, 0.000000], [-0.537905, 0.084644, 0.838453, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[55.726147, 22.469425, 0.000000]) multmatrix(m=[[0.850689, -0.133863, 0.507908, 0.000000], [-0.501734, 0.078952, 0.861157, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[55.726147, 22.469425, 0.000000]) multmatrix(m=[[0.861196, -0.135516, 0.489875, 0.000000], [-0.483920, 0.076149, 0.871793, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.695421, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[55.726147, 22.469425, 0.000000]) multmatrix(m=[[0.850689, -0.133863, 0.507908, 0.000000], [-0.501734, 0.078952, 0.861157, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[56.066816, 23.075688, 0.000000]) multmatrix(m=[[0.870405, -0.136966, 0.472490, 0.000000], [-0.466746, 0.073447, 0.881115, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[56.066816, 23.075688, 0.000000]) multmatrix(m=[[0.879614, -0.138415, 0.455105, 0.000000], [-0.449573, 0.070744, 0.890438, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.724380, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[56.066816, 23.075688, 0.000000]) multmatrix(m=[[0.870405, -0.136966, 0.472490, 0.000000], [-0.466746, 0.073447, 0.881115, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[56.396484, 23.720703, 0.000000]) multmatrix(m=[[0.887650, -0.139679, 0.438434, 0.000000], [-0.433104, 0.068153, 0.898572, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[56.396484, 23.720703, 0.000000]) multmatrix(m=[[0.895685, -0.140944, 0.421763, 0.000000], [-0.416636, 0.065561, 0.906706, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.755054, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[56.396484, 23.720703, 0.000000]) multmatrix(m=[[0.887650, -0.139679, 0.438434, 0.000000], [-0.433104, 0.068153, 0.898572, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[56.714938, 24.405315, 0.000000]) multmatrix(m=[[0.902668, -0.142042, 0.405847, 0.000000], [-0.400914, 0.063087, 0.913775, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[56.714938, 24.405315, 0.000000]) multmatrix(m=[[0.909650, -0.143141, 0.389931, 0.000000], [-0.385192, 0.060613, 0.920844, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.787378, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[56.714938, 24.405315, 0.000000]) multmatrix(m=[[0.902668, -0.142042, 0.405847, 0.000000], [-0.400914, 0.063087, 0.913775, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.021961, 25.130367, 0.000000]) multmatrix(m=[[0.915697, -0.144093, 0.374792, 0.000000], [-0.370236, 0.058260, 0.926965, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.021961, 25.130367, 0.000000]) multmatrix(m=[[0.921744, -0.145044, 0.359652, 0.000000], [-0.355280, 0.055906, 0.933087, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.821292, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.021961, 25.130367, 0.000000]) multmatrix(m=[[0.915697, -0.144093, 0.374792, 0.000000], [-0.370236, 0.058260, 0.926965, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.317340, 25.896704, 0.000000]) multmatrix(m=[[0.926965, -0.145866, 0.345291, 0.000000], [-0.341094, 0.053674, 0.938371, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.317340, 25.896704, 0.000000]) multmatrix(m=[[0.932185, -0.146687, 0.330930, 0.000000], [-0.326907, 0.051442, 0.943655, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.856738, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.317340, 25.896704, 0.000000]) multmatrix(m=[[0.926965, -0.145866, 0.345291, 0.000000], [-0.341094, 0.053674, 0.938371, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.600861, 26.705170, 0.000000]) multmatrix(m=[[0.936678, -0.147394, 0.317338, 0.000000], [-0.313481, 0.049329, 0.948204, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.600861, 26.705170, 0.000000]) multmatrix(m=[[0.941172, -0.148101, 0.303747, 0.000000], [-0.300055, 0.047216, 0.952753, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.893661, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.600861, 26.705170, 0.000000]) multmatrix(m=[[0.936678, -0.147394, 0.317338, 0.000000], [-0.313481, 0.049329, 0.948204, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[57.872307, 27.556608, 0.000000]) multmatrix(m=[[0.945029, -0.148708, 0.290905, 0.000000], [-0.287369, 0.045220, 0.956658, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[57.872307, 27.556608, 0.000000]) multmatrix(m=[[0.948886, -0.149315, 0.278064, 0.000000], [-0.274684, 0.043224, 0.960563, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.932011, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[57.872307, 27.556608, 0.000000]) multmatrix(m=[[0.945029, -0.148708, 0.290905, 0.000000], [-0.287369, 0.045220, 0.956658, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.131466, 28.451862, 0.000000]) multmatrix(m=[[0.952189, -0.149835, 0.265946, 0.000000], [-0.262714, 0.041340, 0.963906, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.131466, 28.451862, 0.000000]) multmatrix(m=[[0.955492, -0.150355, 0.253829, 0.000000], [-0.250744, 0.039457, 0.967249, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.971741, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.131466, 28.451862, 0.000000]) multmatrix(m=[[0.952189, -0.149835, 0.265946, 0.000000], [-0.262714, 0.041340, 0.963906, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.378122, 29.391778, 0.000000]) multmatrix(m=[[0.957647, -0.150694, 0.245204, 0.000000], [-0.242223, 0.038116, 0.969431, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.378122, 29.391778, 0.000000]) multmatrix(m=[[0.959802, -0.151033, 0.236579, 0.000000], [-0.233703, 0.036775, 0.971612, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.501197, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.378122, 29.391778, 0.000000]) multmatrix(m=[[0.957647, -0.150694, 0.245204, 0.000000], [-0.242223, 0.038116, 0.969431, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.496694, 29.878747, 0.000000]) multmatrix(m=[[0.961103, -0.151238, 0.231034, 0.000000], [-0.228225, 0.035913, 0.972929, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.496694, 29.878747, 0.000000]) multmatrix(m=[[0.962403, -0.151442, 0.225489, 0.000000], [-0.222748, 0.035051, 0.974246, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.511627, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.496694, 29.878747, 0.000000]) multmatrix(m=[[0.961103, -0.151238, 0.231034, 0.000000], [-0.228225, 0.035913, 0.972929, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.612061, 30.377197, 0.000000]) multmatrix(m=[[0.963603, -0.151631, 0.220107, 0.000000], [-0.217431, 0.034215, 0.975460, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.612061, 30.377197, 0.000000]) multmatrix(m=[[0.964803, -0.151820, 0.214725, 0.000000], [-0.212115, 0.033378, 0.976675, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.522219, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.612061, 30.377197, 0.000000]) multmatrix(m=[[0.963603, -0.151631, 0.220107, 0.000000], [-0.217431, 0.034215, 0.975460, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.724194, 30.887235, 0.000000]) multmatrix(m=[[0.965908, -0.151994, 0.209501, 0.000000], [-0.206954, 0.032566, 0.977794, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.724194, 30.887235, 0.000000]) multmatrix(m=[[0.967014, -0.152168, 0.204277, 0.000000], [-0.201794, 0.031754, 0.978913, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.532969, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.724194, 30.887235, 0.000000]) multmatrix(m=[[0.965908, -0.151994, 0.209501, 0.000000], [-0.206954, 0.032566, 0.977794, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.833067, 31.408966, 0.000000]) multmatrix(m=[[0.968032, -0.152328, 0.199208, 0.000000], [-0.196786, 0.030966, 0.979944, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.833067, 31.408966, 0.000000]) multmatrix(m=[[0.969050, -0.152488, 0.194138, 0.000000], [-0.191778, 0.030178, 0.980974, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.543876, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.833067, 31.408966, 0.000000]) multmatrix(m=[[0.968032, -0.152328, 0.199208, 0.000000], [-0.196786, 0.030966, 0.979944, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[58.938654, 31.942494, 0.000000]) multmatrix(m=[[0.969987, -0.152636, 0.189217, 0.000000], [-0.186917, 0.029413, 0.981922, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[58.938654, 31.942494, 0.000000]) multmatrix(m=[[0.970923, -0.152783, 0.184297, 0.000000], [-0.182057, 0.028648, 0.982871, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.554938, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[58.938654, 31.942494, 0.000000]) multmatrix(m=[[0.969987, -0.152636, 0.189217, 0.000000], [-0.186917, 0.029413, 0.981922, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.040928, 32.487926, 0.000000]) multmatrix(m=[[0.971784, -0.152918, 0.179522, 0.000000], [-0.177340, 0.027906, 0.983742, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.040928, 32.487926, 0.000000]) multmatrix(m=[[0.972645, -0.153054, 0.174747, 0.000000], [-0.172623, 0.027164, 0.984613, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.566153, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.040928, 32.487926, 0.000000]) multmatrix(m=[[0.971784, -0.152918, 0.179522, 0.000000], [-0.177340, 0.027906, 0.983742, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.139861, 33.045368, 0.000000]) multmatrix(m=[[0.973435, -0.153178, 0.170112, 0.000000], [-0.168044, 0.026443, 0.985413, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.139861, 33.045368, 0.000000]) multmatrix(m=[[0.974226, -0.153303, 0.165477, 0.000000], [-0.163466, 0.025723, 0.986214, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.577518, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.139861, 33.045368, 0.000000]) multmatrix(m=[[0.973435, -0.153178, 0.170112, 0.000000], [-0.168044, 0.026443, 0.985413, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.235427, 33.614924, 0.000000]) multmatrix(m=[[0.974950, -0.153417, 0.160979, 0.000000], [-0.159022, 0.025024, 0.986947, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.235427, 33.614924, 0.000000]) multmatrix(m=[[0.975675, -0.153531, 0.156481, 0.000000], [-0.154579, 0.024324, 0.987681, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.589033, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.235427, 33.614924, 0.000000]) multmatrix(m=[[0.974950, -0.153417, 0.160979, 0.000000], [-0.159022, 0.025024, 0.986947, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.327600, 34.196700, 0.000000]) multmatrix(m=[[0.976339, -0.153635, 0.152115, 0.000000], [-0.150266, 0.023646, 0.988353, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.327600, 34.196700, 0.000000]) multmatrix(m=[[0.977003, -0.153740, 0.147748, 0.000000], [-0.145952, 0.022967, 0.989025, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.600694, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.327600, 34.196700, 0.000000]) multmatrix(m=[[0.976339, -0.153635, 0.152115, 0.000000], [-0.150266, 0.023646, 0.988353, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.416351, 34.790802, 0.000000]) multmatrix(m=[[0.977610, -0.153835, 0.143510, 0.000000], [-0.141765, 0.022308, 0.989640, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.416351, 34.790802, 0.000000]) multmatrix(m=[[0.978217, -0.153931, 0.139271, 0.000000], [-0.137579, 0.021649, 0.990254, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.612502, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.416351, 34.790802, 0.000000]) multmatrix(m=[[0.977610, -0.153835, 0.143510, 0.000000], [-0.141765, 0.022308, 0.989640, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.501655, 35.397335, 0.000000]) multmatrix(m=[[0.978772, -0.154018, 0.135157, 0.000000], [-0.133514, 0.021010, 0.990816, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.501655, 35.397335, 0.000000]) multmatrix(m=[[0.979326, -0.154105, 0.131042, 0.000000], [-0.129449, 0.020370, 0.991377, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.624454, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.501655, 35.397335, 0.000000]) multmatrix(m=[[0.978772, -0.154018, 0.135157, 0.000000], [-0.133514, 0.021010, 0.990816, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.583485, 36.016405, 0.000000]) multmatrix(m=[[0.979832, -0.154185, 0.127047, 0.000000], [-0.125503, 0.019749, 0.991889, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.583485, 36.016405, 0.000000]) multmatrix(m=[[0.980337, -0.154264, 0.123052, 0.000000], [-0.121556, 0.019128, 0.992400, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.636549, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.583485, 36.016405, 0.000000]) multmatrix(m=[[0.979832, -0.154185, 0.127047, 0.000000], [-0.125503, 0.019749, 0.991889, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.661814, 36.648116, 0.000000]) multmatrix(m=[[0.980797, -0.154337, 0.119172, 0.000000], [-0.117724, 0.018525, 0.992866, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.661814, 36.648116, 0.000000]) multmatrix(m=[[0.981257, -0.154409, 0.115293, 0.000000], [-0.113892, 0.017922, 0.993332, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.648786, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.661814, 36.648116, 0.000000]) multmatrix(m=[[0.980797, -0.154337, 0.119172, 0.000000], [-0.117724, 0.018525, 0.992866, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.736614, 37.292576, 0.000000]) multmatrix(m=[[0.981675, -0.154475, 0.111526, 0.000000], [-0.110170, 0.017336, 0.993754, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.736614, 37.292576, 0.000000]) multmatrix(m=[[0.982092, -0.154541, 0.107758, 0.000000], [-0.106448, 0.016751, 0.994177, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.661162, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.736614, 37.292576, 0.000000]) multmatrix(m=[[0.981675, -0.154475, 0.111526, 0.000000], [-0.110170, 0.017336, 0.993754, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.807860, 37.949888, 0.000000]) multmatrix(m=[[0.982471, -0.154600, 0.104099, 0.000000], [-0.102834, 0.016182, 0.994560, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.807860, 37.949888, 0.000000]) multmatrix(m=[[0.982849, -0.154660, 0.100440, 0.000000], [-0.099219, 0.015613, 0.994943, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.673678, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.807860, 37.949888, 0.000000]) multmatrix(m=[[0.982471, -0.154600, 0.104099, 0.000000], [-0.102834, 0.016182, 0.994560, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.875524, 38.620160, 0.000000]) multmatrix(m=[[0.983191, -0.154713, 0.096885, 0.000000], [-0.095707, 0.015060, 0.995289, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.875524, 38.620160, 0.000000]) multmatrix(m=[[0.983533, -0.154767, 0.093330, 0.000000], [-0.092196, 0.014508, 0.995635, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.686331, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.875524, 38.620160, 0.000000]) multmatrix(m=[[0.983191, -0.154713, 0.096885, 0.000000], [-0.095707, 0.015060, 0.995289, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[59.939580, 39.303495, 0.000000]) multmatrix(m=[[0.983841, -0.154816, 0.089877, 0.000000], [-0.088784, 0.013971, 0.995947, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } intersection() { intersection() { translate(v=[59.939580, 39.303495, 0.000000]) multmatrix(m=[[0.984148, -0.154864, 0.086423, 0.000000], [-0.085373, 0.013434, 0.996259, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) linear_extrude(convexity=4, height=2000.699121, scale=[1.000000, 1.000000], twist=0.000000) let($fa=2.000000, $fn=0, $fs=0.150000) union() { rotate(a=0.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=72.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=144.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=216.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } rotate(a=288.000000) hull() union() { circle(d=4.000000); translate(v=[10.000000, 0.000000]) circle(d=2.000000); } } translate(v=[59.939580, 39.303495, 0.000000]) multmatrix(m=[[0.983841, -0.154816, 0.089877, 0.000000], [-0.088784, 0.013971, 0.995947, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } translate(v=[60.000000, 40.000000, 0.000000]) multmatrix(m=[[0.984148, -0.154864, 0.086423, 0.000000], [-0.085373, 0.013434, 0.996259, 0.000000], [-0.155446, -0.987844, 0.000000, 0.000000], [0.000000, 0.000000, 0.000000, 1.000000]]) translate(v=[0.000000, 0.000000, -1000.000000]) translate(v=[-500.000000, -500.000000, 0.000000]) cube(size=[1000.000000, 1000.000000, 1000.000000]); } }